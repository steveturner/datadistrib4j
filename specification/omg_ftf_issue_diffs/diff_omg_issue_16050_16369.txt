
Property changes on: .
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /trunk:r116,121,136


Property changes on: specification
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /trunk/specification:r116,121,136

Index: srcJava/org/omg/dds/core/EntityQos.java
===================================================================
--- srcJava/org/omg/dds/core/EntityQos.java	(revision 156)
+++ srcJava/org/omg/dds/core/EntityQos.java	(working copy)
@@ -50,23 +50,26 @@
 @Extensibility(Extensibility.Kind.MUTABLE_EXTENSIBILITY)
 public interface EntityQos<UNMOD_SELF extends EntityQos<UNMOD_SELF, MOD_SELF>,
                            MOD_SELF extends UNMOD_SELF>
-extends Value<UNMOD_SELF, MOD_SELF>, Map<QosPolicy.Id, QosPolicy<?, ?>>
+extends Value<UNMOD_SELF, MOD_SELF>, Map<Class<? extends QosPolicy<?, ?>>, QosPolicy<?, ?>>
 {
     /**
      * @return  a reference to the corresponding policy in this
-     *          <code>EntityQos</code>. The returned object is not a copy; changes
-     *          to the returned object will be reflected in subsequent
+     *          <code>EntityQos</code>. The returned object is not a copy;
+     *          changes to the returned object will be reflected in subsequent
      *          accesses.
      *
      * @see Map#get(Object)
      */
-    public <POLICY extends QosPolicy<POLICY, ?>> POLICY get(QosPolicy.Id id);
+    public <POLICY extends QosPolicy<POLICY, ?>> POLICY get(
+            Class<? extends QosPolicy<?, ?>> id);
 
     /**
-     * @throws  UnsupportedOperationException   if this <code>EntityQos</code> is
-     *          not a <code>ModifiableEntityQos</code>.
+     * @throws  UnsupportedOperationException   if this <code>EntityQos</code>
+     *          is not a <code>ModifiableEntityQos</code>.
      */
-    public QosPolicy<?, ?> put(QosPolicy.Id key, QosPolicy<?, ?> value);
+    public QosPolicy<?, ?> put(
+            Class<? extends QosPolicy<?, ?>> key,
+            QosPolicy<?, ?> value);
 
     /**
      * @throws  UnsupportedOperationException   always: the <tt>remove</tt>
Index: srcJava/org/omg/dds/core/status/RequestedIncompatibleQosStatus.java
===================================================================
--- srcJava/org/omg/dds/core/status/RequestedIncompatibleQosStatus.java	(revision 156)
+++ srcJava/org/omg/dds/core/status/RequestedIncompatibleQosStatus.java	(working copy)
@@ -78,11 +78,10 @@
     public abstract int getTotalCountChange();
 
     /**
-     * The {@link org.omg.dds.core.policy.QosPolicy.Id} of one of the
-     * policies that was found to be incompatible the last time an
-     * incompatibility was detected.
+     * The class of one of the policies that was found to be incompatible the
+     * last time an incompatibility was detected.
      */
-    public abstract QosPolicy.Id getLastPolicyId();
+    public abstract Class<? extends QosPolicy<?, ?>> getLastPolicyClass();
 
     /**
      * A list containing for each policy the total number of times that the
Index: srcJava/org/omg/dds/core/status/OfferedIncompatibleQosStatus.java
===================================================================
--- srcJava/org/omg/dds/core/status/OfferedIncompatibleQosStatus.java	(revision 156)
+++ srcJava/org/omg/dds/core/status/OfferedIncompatibleQosStatus.java	(working copy)
@@ -78,10 +78,10 @@
     public abstract int getTotalCountChange();
 
     /**
-     * The {@link QosPolicy.Id} of one of the policies that was found to be
+     * The class of one of the policies that was found to be
      * incompatible the last time an incompatibility was detected.
      */
-    public abstract QosPolicy.Id getLastPolicyId();
+    public abstract Class<? extends QosPolicy<?, ?>> getLastPolicyClass();
 
     /**
      * A list containing for each policy the total number of times that the
Index: srcJava/org/omg/dds/core/modifiable/ModifiableEntityQos.java
===================================================================
--- srcJava/org/omg/dds/core/modifiable/ModifiableEntityQos.java	(revision 156)
+++ srcJava/org/omg/dds/core/modifiable/ModifiableEntityQos.java	(working copy)
@@ -35,12 +35,10 @@
      * 
      * @return  the previous value of the indicated policy if that policy
      *          applies to this <code>EntityQos</code>'s {@link Entity} or
-     *          <code>null</code> otherwise. If the returned object is not
-     *          <code>null</code>, changes to it will <em>not</em> be
-     *          reflected by subsequent calls to {@link #get(Object)}.
+     *          <code>null</code> otherwise.
      * @throws  NullPointerException    if the given key or value is
      *                                  <code>null</code>.
      */
-    public <POLICY extends QosPolicy<POLICY, ?>> POLICY put(
-            QosPolicy.Id key, POLICY value);
+    public QosPolicy<?, ?> put(
+            Class<? extends QosPolicy<?, ?>> key, QosPolicy<?, ?> value);
 }
Index: srcJava/org/omg/dds/core/Bootstrap.java
===================================================================
--- srcJava/org/omg/dds/core/Bootstrap.java	(revision 156)
+++ srcJava/org/omg/dds/core/Bootstrap.java	(working copy)
@@ -27,7 +27,6 @@
 import org.omg.dds.core.modifiable.ModifiableDuration;
 import org.omg.dds.core.modifiable.ModifiableInstanceHandle;
 import org.omg.dds.core.modifiable.ModifiableTime;
-import org.omg.dds.core.policy.QosPolicy;
 import org.omg.dds.core.status.InconsistentTopicStatus;
 import org.omg.dds.core.status.LivelinessChangedStatus;
 import org.omg.dds.core.status.LivelinessLostStatus;
@@ -421,12 +420,6 @@
         public abstract WaitSet newWaitSet();
 
 
-        // --- QoS: ----------------------------------------------------------
-
-        public abstract QosPolicy.Id getQosPolicyId(
-                Class<? extends QosPolicy<?, ?>> policyClass);
-
-
         // --- Status: -------------------------------------------------------
 
         public abstract Set<Class<? extends Status<?>>> allStatusKinds();
Index: srcJava/org/omg/dds/core/policy/QosPolicy.java
===================================================================
--- srcJava/org/omg/dds/core/policy/QosPolicy.java	(revision 156)
+++ srcJava/org/omg/dds/core/policy/QosPolicy.java	(working copy)
@@ -18,7 +18,6 @@
 
 package org.omg.dds.core.policy;
 
-import org.omg.dds.core.Bootstrap;
 import org.omg.dds.core.Condition;
 import org.omg.dds.core.Entity;
 import org.omg.dds.core.Value;
@@ -38,10 +37,8 @@
 /**
  * This class is the abstract root for all the QoS policies. It provides the
  * basic mechanism for an application to specify quality of service
- * parameters. It has a name (<code>getId().getPolicyName()</code>) that is
- * used to identify uniquely each QoS policy. All concrete QosPolicy classes
- * derive from this root and include a value whose type depends on the
- * concrete QoS policy.
+ * parameters. All concrete QosPolicy classes derive from this root and
+ * include a value whose type depends on the concrete QoS policy.
  * 
  * The type of a QosPolicy value may be atomic, such as an integer or float,
  * or compound (a structure). Compound types are used whenever multiple
@@ -121,36 +118,5 @@
 public interface QosPolicy<UNMOD_SELF extends QosPolicy<UNMOD_SELF, MOD_SELF>,
                            MOD_SELF extends UNMOD_SELF>
 extends Value<UNMOD_SELF, MOD_SELF> {
-    // -----------------------------------------------------------------------
-    // Methods
-    // -----------------------------------------------------------------------
-
-    public Id getId();
-
-
-
-    // -----------------------------------------------------------------------
-    // Types
-    // -----------------------------------------------------------------------
-    
-    public static abstract class Id {
-        // --- Factory Methods: ----------------------------------------------
-        /**
-         * Get the QoS policy ID for the given QoS policy class.
-         * 
-         * @param bootstrap Identifies the Service instance to which the
-         *                  object will belong.
-         */
-        public static Id getId(
-                Class<? extends QosPolicy<?, ?>> policyClass,
-                Bootstrap bootstrap) {
-            return bootstrap.getSPI().getQosPolicyId(policyClass);
-        }
-
-        // --- Instance Methods: ---------------------------------------------
-        public abstract int getPolicyIdValue();
-
-        public abstract String getPolicyName();
-    }
-
+    // empty
 }
Index: srcJava/org/omg/dds/core/policy/QosPolicyCount.java
===================================================================
--- srcJava/org/omg/dds/core/policy/QosPolicyCount.java	(revision 156)
+++ srcJava/org/omg/dds/core/policy/QosPolicyCount.java	(working copy)
@@ -23,10 +23,7 @@
 
 public interface QosPolicyCount
 extends ModifiableValue<QosPolicyCount, QosPolicyCount> {
-    /**
-     * @return the policyId
-     */
-    public QosPolicy.Id getPolicyId();
+    public Class<? extends QosPolicy<?, ?>> getPolicyClass();
 
     /**
      * @return the count
