
Property changes on: ftf_vote_01
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /trunk:r123,137

Index: ftf_vote_01/srcJavaExample/org/omg/example/dds/helloworld/Greeting.java
===================================================================
--- ftf_vote_01/srcJavaExample/org/omg/example/dds/helloworld/Greeting.java	(revision 140)
+++ ftf_vote_01/srcJavaExample/org/omg/example/dds/helloworld/Greeting.java	(working copy)
@@ -20,12 +20,8 @@
 
 
 public class Greeting {
-    private final String value;
+    private final String value = "Hello, World";
 
-    public Greeting(String value) {
-        this.value = value;
-    }
-
     public String getValue() {
         return value;
     }
Index: ftf_vote_01/srcJavaExample/org/omg/example/dds/helloworld/GreetingPublishingApp.java
===================================================================
--- ftf_vote_01/srcJavaExample/org/omg/example/dds/helloworld/GreetingPublishingApp.java	(revision 140)
+++ ftf_vote_01/srcJavaExample/org/omg/example/dds/helloworld/GreetingPublishingApp.java	(working copy)
@@ -26,30 +26,27 @@
 import org.omg.dds.pub.DataWriter;
 import org.omg.dds.pub.Publisher;
 import org.omg.dds.topic.Topic;
+import org.omg.dds.type.TypeSupport;
 
 
 public class GreetingPublishingApp {
     public static void main(String[] args) {
+        Bootstrap bstp = Bootstrap.createInstance();
         DomainParticipantFactory factory =
-            DomainParticipantFactory.getInstance(Bootstrap.createInstance());
+            DomainParticipantFactory.getInstance(bstp);
         DomainParticipant dp = factory.createParticipant();
 
-        // Implicitly create TypeSupport and register type:
-        Topic<Greeting> tp = dp.createTopic("My Topic", Greeting.class);
-        // OR explicitly create TypeSupport, registered with default name:
-        // Topic<Greeting> tp = dp.createTopic(
-        //         "My Topic",
-        //         ctx.createTypeSupport(Greeting.class));
-        // OR explicitly create TypeSupport, registered with custom name:
-        // Topic<Greeting> tp = dp.createTopic(
-        //         "My Topic",
-        //         ctx.createTypeSupport(Greeting.class, "MyType"));
+        // Implicitly register type:
+        TypeSupport<Greeting> greetingType = TypeSupport.newTypeSupport(
+                Greeting.class,
+                bstp);
+        Topic<Greeting> tp = dp.createTopic("My Topic", greetingType);
 
         Publisher pub = dp.createPublisher();
         DataWriter<Greeting> dw = pub.createDataWriter(tp);
 
         try {
-            dw.write(new Greeting("Hello, World"));
+            dw.write(greetingType.newData());
         } catch (TimeoutException tx) {
             tx.printStackTrace();
         }
Index: ftf_vote_01/srcJava/org/omg/dds/type/dynamic/DynamicDataFactory.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/type/dynamic/DynamicDataFactory.java	(revision 143)
+++ ftf_vote_01/srcJava/org/omg/dds/type/dynamic/DynamicDataFactory.java	(working copy)
@@ -1,45 +0,0 @@
-/* Copyright 2010, Object Management Group, Inc.
- * Copyright 2010, PrismTech, Inc.
- * Copyright 2010, Real-Time Innovations, Inc.
- * All rights reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.omg.dds.type.dynamic;
-
-import org.omg.dds.core.Bootstrap;
-
-
-public abstract class DynamicDataFactory 
-{
-    // -----------------------------------------------------------------------
-    // Singleton Access
-    // -----------------------------------------------------------------------
-
-    /**
-     * @param bootstrap Identifies the Service instance to which the
-     *                  object will belong.
-     */
-    public static DynamicDataFactory getInstance(Bootstrap bootstrap) {
-        return bootstrap.getSPI().getDataFactory();
-    }
-
-
-
-    // -----------------------------------------------------------------------
-    // Instance Methods
-    // -----------------------------------------------------------------------
-
-    public abstract DynamicData createData();
-}
Index: ftf_vote_01/srcJava/org/omg/dds/type/TypeSupport.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/type/TypeSupport.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/type/TypeSupport.java	(working copy)
@@ -91,6 +91,16 @@
     // -----------------------------------------------------------------------
 
     /**
+     * @return  a new object of the type supported by this TypeSupport.
+     */
+    public abstract TYPE newData();
+
+    /**
+     * @return  the class of the type supported by this TypeSupport.
+     */
+    public abstract Class<TYPE> getType();
+
+    /**
      * @return  the registered name for the data type represented by the
      *          TypeSupport.
      */
Index: ftf_vote_01/srcJava/org/omg/dds/pub/DataWriter.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/pub/DataWriter.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/pub/DataWriter.java	(working copy)
@@ -72,11 +72,6 @@
                      DataWriterListener<TYPE>,
                      DataWriterQos> {
     /**
-     * @return  the type parameter if this object's class.
-     */
-    public Class<TYPE> getType();
-
-    /**
      * Cast this data writer to the given type, or throw an exception if
      * the cast fails.
      * 
Index: ftf_vote_01/srcJava/org/omg/dds/core/Bootstrap.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/core/Bootstrap.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/core/Bootstrap.java	(working copy)
@@ -46,13 +46,7 @@
 import org.omg.dds.sub.InstanceState;
 import org.omg.dds.sub.SampleState;
 import org.omg.dds.sub.ViewState;
-import org.omg.dds.topic.BuiltinTopicKey;
-import org.omg.dds.topic.ParticipantBuiltinTopicData;
-import org.omg.dds.topic.PublicationBuiltinTopicData;
-import org.omg.dds.topic.SubscriptionBuiltinTopicData;
-import org.omg.dds.topic.TopicBuiltinTopicData;
 import org.omg.dds.type.TypeSupport;
-import org.omg.dds.type.dynamic.DynamicDataFactory;
 import org.omg.dds.type.dynamic.DynamicTypeFactory;
 
 
@@ -348,9 +342,7 @@
 
         public abstract DynamicTypeFactory getTypeFactory();
 
-        public abstract DynamicDataFactory getDataFactory();
 
-
         // --- Types: --------------------------------------------------------
 
         /**
@@ -431,23 +423,6 @@
         public abstract WaitSet newWaitSet();
 
 
-        // --- Built-in topics: ----------------------------------------------
-
-        public abstract BuiltinTopicKey newBuiltinTopicKey();
-
-        public abstract ParticipantBuiltinTopicData
-        newParticipantBuiltinTopicData();
-
-        public abstract PublicationBuiltinTopicData
-        newPublicationBuiltinTopicData();
-
-        public abstract SubscriptionBuiltinTopicData
-        newSubscriptionBuiltinTopicData();
-
-        public abstract TopicBuiltinTopicData
-        newTopicBuiltinTopicData();
-
-
         // --- QoS: ----------------------------------------------------------
 
         public abstract QosPolicy.Id getQosPolicyId(
Index: ftf_vote_01/srcJava/org/omg/dds/sub/DataReader.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/sub/DataReader.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/sub/DataReader.java	(working copy)
@@ -95,11 +95,6 @@
                      DataReaderListener<TYPE>,
                      DataReaderQos> {
     /**
-     * @return  the type parameter if this object's class.
-     */
-    public Class<TYPE> getType();
-
-    /**
      * Cast this data reader to the given type, or throw an exception if
      * the cast fails.
      * 
@@ -370,19 +365,6 @@
     // --- Type-specific interface: ------------------------------------------
 
     /**
-     * Create and return a new Sample of the same type as may be accessed by
-     * this DataReader.
-     * 
-     * Applications may use this method, for example, to preallocate samples
-     * to be overwritten by the <code>read</code> and/or <code>take</code>
-     * methods of this interface.
-     * 
-     * @see #read(List)
-     * @see #take(List)
-     */
-    public Sample<TYPE> createSample();
-
-    /**
      * TODO: Add JavaDoc.
      * 
      * @return  a non-null unmodifiable iterator over loaned samples.
Index: ftf_vote_01/srcJava/org/omg/dds/topic/TopicDescription.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/topic/TopicDescription.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/topic/TopicDescription.java	(working copy)
@@ -42,9 +42,9 @@
  */
 public interface TopicDescription<TYPE> extends DDSObject {
     /**
-     * @return  the type parameter if this object's class.
+     * @return  the {@link TypeSupport} used to create this TopicDescription.
      */
-    public Class<TYPE> getType();
+    public TypeSupport<TYPE> getTypeSupport();
 
     /**
      * Cast this topic description to the given type, or throw an exception if
Index: ftf_vote_01/srcJava/org/omg/dds/topic/SubscriptionBuiltinTopicData.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/topic/SubscriptionBuiltinTopicData.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/topic/SubscriptionBuiltinTopicData.java	(working copy)
@@ -20,7 +20,6 @@
 
 import java.util.List;
 
-import org.omg.dds.core.Bootstrap;
 import org.omg.dds.core.modifiable.ModifiableValue;
 import org.omg.dds.core.policy.DataRepresentationQosPolicy;
 import org.omg.dds.core.policy.DeadlineQosPolicy;
@@ -58,21 +57,6 @@
 
 
     // -----------------------------------------------------------------------
-    // Factory Methods
-    // -----------------------------------------------------------------------
-
-    /**
-     * @param bootstrap Identifies the Service instance to which the new
-     *                  object will belong.
-     */
-    public static SubscriptionBuiltinTopicData newSubscriptionBuiltinTopicData(
-            Bootstrap bootstrap) {
-        return bootstrap.getSPI().newSubscriptionBuiltinTopicData();
-    }
-
-
-
-    // -----------------------------------------------------------------------
     // Instance Methods
     // -----------------------------------------------------------------------
 
Index: ftf_vote_01/srcJava/org/omg/dds/topic/PublicationBuiltinTopicData.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/topic/PublicationBuiltinTopicData.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/topic/PublicationBuiltinTopicData.java	(working copy)
@@ -20,7 +20,6 @@
 
 import java.util.List;
 
-import org.omg.dds.core.Bootstrap;
 import org.omg.dds.core.modifiable.ModifiableValue;
 import org.omg.dds.core.policy.DataRepresentationQosPolicy;
 import org.omg.dds.core.policy.DeadlineQosPolicy;
@@ -60,21 +59,6 @@
 
 
     // -----------------------------------------------------------------------
-    // Factory Methods
-    // -----------------------------------------------------------------------
-
-    /**
-     * @param bootstrap Identifies the Service instance to which the new
-     *                  object will belong.
-     */
-    public static PublicationBuiltinTopicData newPublicationBuiltinTopicData(
-            Bootstrap bootstrap) {
-        return bootstrap.getSPI().newPublicationBuiltinTopicData();
-    }
-
-
-
-    // -----------------------------------------------------------------------
     // Instance Methods
     // -----------------------------------------------------------------------
 
Index: ftf_vote_01/srcJava/org/omg/dds/topic/TopicBuiltinTopicData.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/topic/TopicBuiltinTopicData.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/topic/TopicBuiltinTopicData.java	(working copy)
@@ -20,7 +20,6 @@
 
 import java.util.List;
 
-import org.omg.dds.core.Bootstrap;
 import org.omg.dds.core.modifiable.ModifiableValue;
 import org.omg.dds.core.policy.DataRepresentationQosPolicy;
 import org.omg.dds.core.policy.DeadlineQosPolicy;
@@ -57,20 +56,6 @@
 
 
     // -----------------------------------------------------------------------
-    // Factory Methods
-    // -----------------------------------------------------------------------
-
-    /**
-     * @param bootstrap Identifies the Service instance to which the new
-     *                  object will belong.
-     */
-    public static TopicBuiltinTopicData newTopicBuiltinTopicData(
-            Bootstrap bootstrap) {
-        return bootstrap.getSPI().newTopicBuiltinTopicData();
-    }
-
-
-    // -----------------------------------------------------------------------
     // Instance Methods
     // -----------------------------------------------------------------------
 
Index: ftf_vote_01/srcJava/org/omg/dds/topic/BuiltinTopicKey.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/topic/BuiltinTopicKey.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/topic/BuiltinTopicKey.java	(working copy)
@@ -18,7 +18,6 @@
 
 package org.omg.dds.topic;
 
-import org.omg.dds.core.Bootstrap;
 import org.omg.dds.core.modifiable.ModifiableValue;
 import org.omg.dds.type.Extensibility;
 import org.omg.dds.type.Nested;
@@ -38,20 +37,6 @@
 
 
     // -----------------------------------------------------------------------
-    // Factory Methods
-    // -----------------------------------------------------------------------
-
-    /**
-     * @param bootstrap Identifies the Service instance to which the new
-     *                  object will belong.
-     */
-    public static BuiltinTopicKey newBuiltinTopicKey(Bootstrap bootstrap) {
-        return bootstrap.getSPI().newBuiltinTopicKey();
-    }
-
-
-
-    // -----------------------------------------------------------------------
     // Instance Methods
     // -----------------------------------------------------------------------
 
Index: ftf_vote_01/srcJava/org/omg/dds/topic/ParticipantBuiltinTopicData.java
===================================================================
--- ftf_vote_01/srcJava/org/omg/dds/topic/ParticipantBuiltinTopicData.java	(revision 140)
+++ ftf_vote_01/srcJava/org/omg/dds/topic/ParticipantBuiltinTopicData.java	(working copy)
@@ -18,7 +18,6 @@
 
 package org.omg.dds.topic;
 
-import org.omg.dds.core.Bootstrap;
 import org.omg.dds.core.modifiable.ModifiableValue;
 import org.omg.dds.core.policy.UserDataQosPolicy;
 import org.omg.dds.type.Extensibility;
@@ -40,21 +39,6 @@
 
 
     // -----------------------------------------------------------------------
-    // Factory Methods
-    // -----------------------------------------------------------------------
-
-    /**
-     * @param bootstrap Identifies the Service instance to which the new
-     *                  object will belong.
-     */
-    public static ParticipantBuiltinTopicData newParticipantBuiltinTopicData(
-            Bootstrap bootstrap) {
-        return bootstrap.getSPI().newParticipantBuiltinTopicData();
-    }
-
-
-
-    // -----------------------------------------------------------------------
     // Instance Methods
     // -----------------------------------------------------------------------
 
